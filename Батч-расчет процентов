/**
 * üöÄ –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –†–û–°–¢–ê –î–õ–Ø 1000+ –°–¢–†–û–ö
 * 
 * ‚ö° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–∫–æ—Ä–æ—Å—Ç–∏:
 * 1. –û–î–ò–ù getValues() –¥–ª—è –≤—Å–µ–≥–æ –ª–∏—Å—Ç–∞
 * 2. –í–°–ï –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏ (–º–∞—Å—Å–∏–≤—ã JavaScript)
 * 3. –û–î–ò–ù setValues() –¥–ª—è –≤—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
 * 4. –ú–ò–ù–ò–ú–£–ú –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * 5. –ù–û–õ–¨ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ª–∏—Å—Ç–æ–º
 * 
 * –°–∫–æ—Ä–æ—Å—Ç—å: 3-5 —Å–µ–∫—É–Ω–¥ –¥–ª—è 34,000 —è—á–µ–µ–∫
 */

// ========================================================================
// üéØ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê
// ========================================================================

function —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–†–æ—Å—Ç–∞() {
  console.time('‚ö° –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
  
  try {
    const baseMonth = –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô;
    const currentMonth = –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô;
    
    if (!baseMonth || !currentMonth) {
      throw new Error('–ù–µ –∑–∞–¥–∞–Ω—ã –º–µ—Å—è—Ü—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞—Ö –ú–ï–°–Ø–¶–´');
    }
    
    console.log(`üöÄ –£–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç —Ä–æ—Å—Ç–∞: ${baseMonth} ‚Üí ${currentMonth}`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å–≤–æ–¥–Ω—ã–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    const summaryTypes = [
      { name: `–°–≤–æ–¥–Ω–∞—è –ë—Ä–µ–Ω–¥+–ì–µ–æ ${currentMonth}`, tableId: –¢–ê–ë–õ–ò–¶–´.–û–°–ù–û–í–ù–ê–Ø },
      { name: `–°–≤–æ–¥–Ω–∞—è –ì–ï–û ${currentMonth}`, tableId: –¢–ê–ë–õ–ò–¶–´.–û–°–ù–û–í–ù–ê–Ø },
      { name: `–°–≤–æ–¥–Ω–∞—è –°–µ–æ—à–Ω–∏–∫–∏ ${currentMonth}`, tableId: –¢–ê–ë–õ–ò–¶–´.–û–°–ù–û–í–ù–ê–Ø }
    ];
    
    let processedSheets = 0;
    
    summaryTypes.forEach(summaryType => {
      try {
        —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä–∞—è–û–±—Ä–∞–±–æ—Ç–∫–∞–õ–∏—Å—Ç–∞(summaryType.name, summaryType.tableId, baseMonth, currentMonth);
        processedSheets++;
      } catch (error) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –ª–∏—Å—Ç "${summaryType.name}": ${error.message}`);
      }
    });
    
    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏—Å—Ç–æ–≤: ${processedSheets}`);
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    throw error;
  } finally {
    console.timeEnd('‚ö° –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
  }
}

// ========================================================================
// ‚ö° –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –û–î–ù–û–ì–û –õ–ò–°–¢–ê
// ========================================================================

function —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä–∞—è–û–±—Ä–∞–±–æ—Ç–∫–∞–õ–∏—Å—Ç–∞(sheetName, tableId, baseMonth, currentMonth) {
  console.time(`‚ö° –û–±—Ä–∞–±–æ—Ç–∫–∞ ${sheetName}`);
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç—ã
    const currentSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);
    const baseSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName.replace(currentMonth, baseMonth));
    
    if (!currentSheet || !baseSheet) {
      throw new Error(`–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ª–∏—Å—Ç—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è`);
    }
    
    // 2. –û–î–ò–ù –∑–∞–ø—Ä–æ—Å - –í–°–ï –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ª–∏—Å—Ç–∞
    const currentData = currentSheet.getDataRange().getValues();
    const baseData = baseSheet.getDataRange().getValues();
    
    if (currentData.length === 0 || baseData.length === 0) {
      throw new Error(`–ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç–∞—Ö`);
    }
    
    // 3. –í–°–ï –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏
    const processedData = –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–î–∞–Ω–Ω—ã–µ–í–ü–∞–º—è—Ç–∏(currentData, baseData);
    
    // 4. –û–î–ò–ù –∑–∞–ø—Ä–æ—Å - –í–°–ï —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (processedData.length > 0) {
      currentSheet.getRange(1, 1, processedData.length, processedData[0].length).setValues(processedData);
    }
    
    // 5. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–∏–º batch'–µ–º
    –ø—Ä–∏–º–µ–Ω–∏—Ç—å–¶–≤–µ—Ç–æ–≤–æ–µ–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–ë—ã—Å—Ç—Ä–æ(currentSheet, processedData);
    
    console.log(`‚úÖ ${sheetName}: ${currentData.length} —Å—Ç—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ`);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${sheetName}:`, error.message);
    throw error;
  } finally {
    console.timeEnd(`‚ö° –û–±—Ä–∞–±–æ—Ç–∫–∞ ${sheetName}`);
  }
}

// ========================================================================
// üß† –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–• –í –ü–ê–ú–Ø–¢–ò (–ë–ï–ó API –í–´–ó–û–í–û–í)
// ========================================================================

function –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–î–∞–Ω–Ω—ã–µ–í–ü–∞–º—è—Ç–∏(currentData, baseData) {
  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const processedData = currentData.map(row => [...row]);
  
  // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  const baseIndex = new Map();
  baseData.forEach((row, index) => {
    if (row[0]) {
      baseIndex.set(row[0].toString().trim(), row);
    }
  });
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
  for (let rowIndex = 0; rowIndex < processedData.length; rowIndex++) {
    const currentRow = processedData[rowIndex];
    const rowName = currentRow[0];
    
    if (!rowName || typeof rowName !== 'string') continue;
    
    const rowStr = rowName.toString().trim();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–Ω–µ —Å—Ç—Ä–æ–∫–∏ —Ä–æ—Å—Ç–∞)
    if (!rowStr.includes('–†–æ—Å—Ç') && !rowStr.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ')) {
      const baseRow = baseIndex.get(rowStr);
      if (baseRow) {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Ä–æ—Å—Ç–∞
        –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
          const current = parseFloat(currentRow[config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1]) || 0;
          const base = parseFloat(baseRow[config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1]) || 0;
          
          // –ê–±—Å–æ–ª—é—Ç–Ω—ã–π —Ä–æ—Å—Ç
          const absoluteGrowth = current - base;
          processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1] = —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(absoluteGrowth);
          
          // –ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π —Ä–æ—Å—Ç
          const percentGrowth = —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(base, current);
          processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1] = percentGrowth;
        });
      } else {
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—à–ª–æ–º –º–µ—Å—è—Ü–µ
        –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
          processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
          processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
        });
      }
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Ä–æ—Å—Ç–∞
    if (rowStr === '–†–æ—Å—Ç / –ü–∞–¥–µ–Ω–∏–µ' || rowStr === '–í –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ') {
      –∑–∞–ø–æ–ª–Ω–∏—Ç—å–°—Ç—Ä–æ–∫—É–†–æ—Å—Ç–∞–í–ü–∞–º—è—Ç–∏(processedData, rowIndex, baseIndex, rowStr === '–†–æ—Å—Ç / –ü–∞–¥–µ–Ω–∏–µ');
    }
  }
  
  return processedData;
}

// ========================================================================
// üìä –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –°–¢–†–û–ö –†–û–°–¢–ê –í –ü–ê–ú–Ø–¢–ò
// ========================================================================

function –∑–∞–ø–æ–ª–Ω–∏—Ç—å–°—Ç—Ä–æ–∫—É–†–æ—Å—Ç–∞–í–ü–∞–º—è—Ç–∏(processedData, rowIndex, baseIndex, isPercentRow) {
  // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é —Å—Ç—Ä–æ–∫—É
  let parentRow = null;
  let baseParentRow = null;
  
  for (let i = rowIndex - 1; i >= 0; i--) {
    const checkRow = processedData[i];
    if (checkRow[0] && !checkRow[0].toString().includes('–†–æ—Å—Ç') && !checkRow[0].toString().includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ')) {
      parentRow = checkRow;
      baseParentRow = baseIndex.get(checkRow[0].toString().trim());
      break;
    }
  }
  
  if (!parentRow) return;
  
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  if (!baseParentRow) {
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—à–ª–æ–º –º–µ—Å—è—Ü–µ - –∑–∞–ø–æ–ª–Ω—è–µ–º "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
    });
    
    processedData[rowIndex][1] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"; // –°–∞–π—Ç—ã
    processedData[rowIndex][2] = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"; // –°–µ–æ—à–Ω–∏–∫–∏
    return;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–µ –∏—Ç–æ–≥–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –æ—Ç –æ–±—â–µ–≥–æ
  const grandTotalsCurrent = –Ω–∞–π—Ç–∏–û–±—â–∏–µ–ò—Ç–æ–≥–∏–í–ü–∞–º—è—Ç–∏(processedData);
  const grandTotalsBase = –Ω–∞–π—Ç–∏–û–±—â–∏–µ–ò—Ç–æ–≥–∏–í–ü–∞–º—è—Ç–∏(Array.from(baseIndex.values()));
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Ä–æ—Å—Ç–∞
  –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
    const currentValue = parseFloat(parentRow[config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1]) || 0;
    const baseValue = parseFloat(baseParentRow[config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1]) || 0;
    const absoluteGrowth = currentValue - baseValue;
    
    if (isPercentRow) {
      // –°—Ç—Ä–æ–∫–∞ "–†–æ—Å—Ç / –ü–∞–¥–µ–Ω–∏–µ" - –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      const percentGrowth = —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(baseValue, currentValue);
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1] = percentGrowth;
      
      // –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–≥–æ - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ª–∏
      const percentColumn = config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö;
      if (grandTotalsCurrent && grandTotalsBase) {
        const currentPercent = grandTotalsCurrent[config.–Ω–∞–∑–≤–∞–Ω–∏–µ] > 0 ? (currentValue / grandTotalsCurrent[config.–Ω–∞–∑–≤–∞–Ω–∏–µ] * 100) : 0;
        const basePercent = grandTotalsBase[config.–Ω–∞–∑–≤–∞–Ω–∏–µ] > 0 ? (baseValue / grandTotalsBase[config.–Ω–∞–∑–≤–∞–Ω–∏–µ] * 100) : 0;
        const percentChange = currentPercent - basePercent;
        processedData[rowIndex][percentColumn] = percentChange.toFixed(2) + '%';
      }
      
      // –°—Ç–æ–ª–±—Ü—ã —Ä–æ—Å—Ç–∞
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1] = percentGrowth;
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1] = percentGrowth;
      
    } else {
      // –°—Ç—Ä–æ–∫–∞ "–í –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ" - –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1] = —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(absoluteGrowth);
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1] = —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(absoluteGrowth);
      
      // –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–æ—Å—Ç–∞ –≤ —Å—Ç–æ–ª–±—Ü–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
      const percentGrowth = —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(baseValue, currentValue);
      processedData[rowIndex][config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1] = percentGrowth;
    }
  });
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∞–π—Ç—ã –∏ —Å–µ–æ—à–Ω–∏–∫–æ–≤
  const currentSites = parseFloat(parentRow[1]) || 0;
  const baseSites = parseFloat(baseParentRow[1]) || 0;
  const sitesGrowth = currentSites - baseSites;
  
  if (isPercentRow) {
    processedData[rowIndex][1] = —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(baseSites, currentSites);
  } else {
    processedData[rowIndex][1] = —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(sitesGrowth);
  }
  
  const currentSeos = parseFloat(parentRow[2]) || 0;
  const baseSeos = parseFloat(baseParentRow[2]) || 0;
  const seosGrowth = currentSeos - baseSeos;
  
  if (isPercentRow) {
    processedData[rowIndex][2] = —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(baseSeos, currentSeos);
  } else {
    processedData[rowIndex][2] = —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(seosGrowth);
  }
}

// ========================================================================
// üé® –ë–´–°–¢–†–û–ï –¶–í–ï–¢–û–í–û–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï
// ========================================================================

function –ø—Ä–∏–º–µ–Ω–∏—Ç—å–¶–≤–µ—Ç–æ–≤–æ–µ–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–ë—ã—Å—Ç—Ä–æ(sheet, processedData) {
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ü–≤–µ—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  const colorOperations = [];
  
  for (let rowIndex = 0; rowIndex < processedData.length; rowIndex++) {
    const row = processedData[rowIndex];
    const rowName = row[0];
    
    if (!rowName) continue;
    
    const rowStr = rowName.toString().trim();
    
    // –¶–≤–µ—Ç–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö
    if (!rowStr.includes('–†–æ—Å—Ç') && !rowStr.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ')) {
      –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
        const absoluteValue = row[config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞ - 1];
        const percentValue = row[config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞ - 1];
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —è—á–µ–π–∫–∏ —Å "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        if (absoluteValue !== "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" && typeof absoluteValue !== 'undefined') {
          const absoluteColor = –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–†–æ—Å—Ç–∞(absoluteValue);
          if (absoluteColor) {
            colorOperations.push({
              row: rowIndex + 1,
              col: config.—Å—Ç–æ–ª–±–µ—Ü_—Ä–æ—Å—Ç–∞,
              color: absoluteColor
            });
          }
        }
        
        if (percentValue !== "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" && typeof percentValue !== 'undefined') {
          const percentColor = –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–ü—Ä–æ—Ü–µ–Ω—Ç–∞(percentValue);
          if (percentColor) {
            colorOperations.push({
              row: rowIndex + 1,
              col: config.—Å—Ç–æ–ª–±–µ—Ü_–ø—Ä–æ—Ü–µ–Ω—Ç–∞,
              color: percentColor
            });
          }
        }
      });
    }
    
    // –¶–≤–µ—Ç–∞ –¥–ª—è —Å—Ç—Ä–æ–∫ —Ä–æ—Å—Ç–∞
    if (rowStr === '–†–æ—Å—Ç / –ü–∞–¥–µ–Ω–∏–µ' || rowStr === '–í –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ') {
      for (let colIndex = 1; colIndex < row.length; colIndex++) {
        const cellValue = row[colIndex];
        if (cellValue !== "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" && typeof cellValue !== 'undefined') {
          const color = rowStr === '–†–æ—Å—Ç / –ü–∞–¥–µ–Ω–∏–µ' ? 
            –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–ü—Ä–æ—Ü–µ–Ω—Ç–∞(cellValue) : 
            –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–†–æ—Å—Ç–∞(cellValue);
          
          if (color) {
            colorOperations.push({
              row: rowIndex + 1,
              col: colIndex + 1,
              color: color
            });
          }
        }
      }
    }
  }
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —Ü–≤–µ—Ç–∞ –æ–¥–Ω–∏–º batch'–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  if (colorOperations.length > 0) {
    –ø—Ä–∏–º–µ–Ω–∏—Ç—å–¶–≤–µ—Ç–∞–ë–∞—Ç—á–µ–º(sheet, colorOperations);
  }
}

function –ø—Ä–∏–º–µ–Ω–∏—Ç—å–¶–≤–µ—Ç–∞–ë–∞—Ç—á–µ–º(sheet, operations) {
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
  try {
    operations.forEach(op => {
      try {
        const range = sheet.getRange(op.row, op.col);
        range.setFontColor(op.color);
      } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –∫ —è—á–µ–π–∫–µ ${op.row}:${op.col}`);
      }
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// ========================================================================
// üîß –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ========================================================================

function —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å–ß–∏—Å–ª–æ(value) {
  const numValue = parseFloat(value) || 0;
  // –ï—Å–ª–∏ —á–∏—Å–ª–æ —Ü–µ–ª–æ–µ - –±–µ–∑ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤
  if (numValue === Math.floor(numValue)) {
    return numValue.toString();
  }
  // –ò–Ω–∞—á–µ - 2 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
  return numValue.toFixed(2);
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞
function —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π–†–æ—Å—Ç(oldValue, newValue) {
  const oldNum = parseFloat(oldValue) || 0;
  const newNum = parseFloat(newValue) || 0;
  
  // –ï—Å–ª–∏ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è 0
  if (oldNum === 0 && newNum === 0) {
    return '0.00%';
  }
  
  // –ï—Å–ª–∏ —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0, –∞ –Ω–æ–≤–æ–µ –µ—Å—Ç—å - —ç—Ç–æ 100% —Ä–æ—Å—Ç –æ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è
  if (oldNum === 0 && newNum !== 0) {
    return newNum > 0 ? '100.00%' : '-100.00%';
  }
  
  // –û–±—ã—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞
  const growth = ((newNum - oldNum) / Math.abs(oldNum)) * 100;
  return growth.toFixed(2) + '%';
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
function –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–ü—Ä–æ—Ü–µ–Ω—Ç–∞(value) {
  if (typeof value === 'string' && value.includes('%')) {
    const numValue = parseFloat(value.replace('%', '')) || 0;
    return –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–†–æ—Å—Ç–∞(numValue);
  }
  return –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–†–æ—Å—Ç–∞(value);
}

function –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å–¶–≤–µ—Ç–†–æ—Å—Ç–∞(value) {
  if (typeof value === 'string' && (value === "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" || value === '')) {
    return '#808080';  // –°–µ—Ä—ã–π –¥–ª—è "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
  }
  
  const numValue = parseFloat(value) || 0;
  
  if (numValue > 0) {
    return '#00AA00';  // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  } else if (numValue < 0) {
    return '#CC0000';  // –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  } else {
    return '#666666';  // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π –¥–ª—è –Ω—É–ª—è
  }
}

function –Ω–∞–π—Ç–∏–û–±—â–∏–µ–ò—Ç–æ–≥–∏–í–ü–∞–º—è—Ç–∏(data) {
  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "–í—Å–µ–≥–æ"
  for (let row of data) {
    if (row[0] && row[0].toString().trim() === '–í—Å–µ–≥–æ') {
      const totals = {};
      –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.forEach(config => {
        totals[config.–Ω–∞–∑–≤–∞–Ω–∏–µ] = parseFloat(row[config.—Å—Ç–æ–ª–±–µ—Ü_–¥–∞–Ω–Ω—ã—Ö - 1]) || 0;
      });
      return totals;
    }
  }
  return null;
}

// ========================================================================
// üöÄ –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–û–ù–°–¢–ê–ù–¢–ê–ú–ò
// ========================================================================

function —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–ò–∑–ö–æ–Ω—Å—Ç–∞–Ω—Ç() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏ –∑–∞–≥—Ä—É–∂–µ–Ω
  try {
    if (typeof –ú–ï–°–Ø–¶–´ === 'undefined') {
      throw new Error('‚ùå –§–∞–π–ª "1 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò.js" –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –ø–µ—Ä–≤—ã–º.');
    }
    
    if (typeof –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê === 'undefined') {
      throw new Error('‚ùå –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª "1 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò.js"');
    }
    
    if (typeof –¢–ê–ë–õ–ò–¶–´ === 'undefined') {
      throw new Error('‚ùå –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¢–ê–ë–õ–ò–¶–´ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª "1 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò.js"');
    }
    
    if (!–ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô || !–ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô) {
      console.log('üìã –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç:');
      console.log('   –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô =', –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô);
      console.log('   –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô =', –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô);
      throw new Error('‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô –∏ –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!');
    }
    
    console.log(`üìÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã: ${–ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô} ‚Üí ${–ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô}`);
    —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–†–æ—Å—Ç–∞();
    
  } catch (error) {
    console.error('üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
    console.error('   1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª "1 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò.js"');
    console.error('   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô = "–ú–∞–π 2025"');
    console.error('   3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô = "–ò—é–Ω—å 2025"');
    console.error('   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–ò–∑–ö–æ–Ω—Å—Ç–∞–Ω—Ç()');
    throw error;
  }
}

// ========================================================================
// üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ù–°–¢–ê–ù–¢
// ========================================================================

function –ø—Ä–æ–≤–µ—Ä–∏—Ç—å–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ù–°–¢–ê–ù–¢:');
  console.log('');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ú–ï–°–Ø–¶–´
  try {
    console.log('üìÖ –ú–ï–°–Ø–¶–´:', typeof –ú–ï–°–Ø–¶–´ !== 'undefined' ? '‚úÖ' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û');
    if (typeof –ú–ï–°–Ø–¶–´ !== 'undefined') {
      console.log('   –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô =', –ú–ï–°–Ø–¶–´.–ë–ê–ó–û–í–´–ô || '‚ùå –ù–ï –ó–ê–î–ê–ù');
      console.log('   –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô =', –ú–ï–°–Ø–¶–´.–¢–ï–ö–£–©–ò–ô || '‚ùå –ù–ï –ó–ê–î–ê–ù');
    }
  } catch (e) {
    console.log('üìÖ –ú–ï–°–Ø–¶–´: ‚ùå –û–®–ò–ë–ö–ê -', e.message);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê
  try {
    console.log('üìä –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê:', typeof –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê !== 'undefined' ? '‚úÖ' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û');
    if (typeof –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê !== 'undefined') {
      console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤:', –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê.length);
    }
  } catch (e) {
    console.log('üìä –°–¢–û–õ–ë–¶–´_–†–û–°–¢–ê: ‚ùå –û–®–ò–ë–ö–ê -', e.message);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¢–ê–ë–õ–ò–¶–´
  try {
    console.log('üìã –¢–ê–ë–õ–ò–¶–´:', typeof –¢–ê–ë–õ–ò–¶–´ !== 'undefined' ? '‚úÖ' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û');
    if (typeof –¢–ê–ë–õ–ò–¶–´ !== 'undefined') {
      console.log('   –¢–ê–ë–õ–ò–¶–´.–û–°–ù–û–í–ù–ê–Ø =', –¢–ê–ë–õ–ò–¶–´.–û–°–ù–û–í–ù–ê–Ø || '‚ùå –ù–ï –ó–ê–î–ê–ù–ê');
    }
  } catch (e) {
    console.log('üìã –¢–ê–ë–õ–ò–¶–´: ‚ùå –û–®–ò–ë–ö–ê -', e.message);
  }
  
  console.log('');
  console.log('üí° –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Ç–º–µ—á–µ–Ω–æ ‚ùå, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª "1 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò.js"');
}

// ========================================================================
// üìä –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
// ========================================================================

console.log('üöÄ –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –ì–û–¢–û–í–ê! (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)');
console.log('');
console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
console.log('   ‚úÖ –£–±—Ä–∞–Ω –∑–Ω–∞–∫ ‚àû, —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–æ—Å—Ç–∞');
console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ü–≤–µ—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('');
console.log('üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
console.log('   0. –ø—Ä–æ–≤–µ—Ä–∏—Ç—å–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã() - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (–ó–ê–ü–£–°–¢–ò–¢–ï –ü–ï–†–í–´–ú!)');
console.log('   1. —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–ò–∑–ö–æ–Ω—Å—Ç–∞–Ω—Ç() - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ú–ï–°–Ø–¶–´ –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç');
console.log('   2. —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–†–æ—Å—Ç–∞() - —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫');
console.log('');
console.log('‚ö° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:');
console.log('   ‚Ä¢ –û–¥–∏–Ω getValues() –¥–ª—è –≤—Å–µ–≥–æ –ª–∏—Å—Ç–∞');
console.log('   ‚Ä¢ –í—Å–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏');
console.log('   ‚Ä¢ –û–¥–∏–Ω setValues() –¥–ª—è –≤—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞');
console.log('   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö');
console.log('   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ü–≤–µ—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('   ‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 3-5 —Å–µ–∫—É–Ω–¥ –¥–ª—è 1000+ —Å—Ç—Ä–æ–∫');
console.log('');
console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã()');
console.log('üéØ –ó–ê–ü–£–°–ö: —É–ª—å—Ç—Ä–∞–ë—ã—Å—Ç—Ä—ã–π–†–∞—Å—á–µ—Ç–ò–∑–ö–æ–Ω—Å—Ç–∞–Ω—Ç()');
